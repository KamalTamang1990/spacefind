{
  "Resources": {
    "SpaceFindApi18BE2EA9": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "SpaceFindApi"
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Resource"
      }
    },
    "SpaceFindApiCloudWatchRoleBADE7D9C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/CloudWatchRole/Resource"
      }
    },
    "SpaceFindApiAccount4FBCEC28": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "SpaceFindApiCloudWatchRoleBADE7D9C",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SpaceFindApi18BE2EA9"
      ],
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Account"
      }
    },
    "SpaceFindApiDeployment9AC7FC48e3d8378a9db74e4c82accb7b242d8599": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "SpaceFindApihelloGETDDF7CD15",
        "SpaceFindApihello4200B2B5",
        "SpaceFindApispacesPOSTFDEFF1C8",
        "SpaceFindApispaces0463F0AE"
      ],
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Deployment/Resource"
      }
    },
    "SpaceFindApiDeploymentStageprod7AF91A2A": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        },
        "DeploymentId": {
          "Ref": "SpaceFindApiDeployment9AC7FC48e3d8378a9db74e4c82accb7b242d8599"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "SpaceFindApiAccount4FBCEC28"
      ],
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/DeploymentStage.prod/Resource"
      }
    },
    "SpaceFindApihello4200B2B5": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "SpaceFindApi18BE2EA9",
            "RootResourceId"
          ]
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/hello/Resource"
      }
    },
    "SpaceFindApihelloGETApiPermissionSpacefindSpaceFindApiB7390014GEThelloDBB4904F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "helloLambdaNodeJsFunction0898EE02",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "SpaceFindApi18BE2EA9"
              },
              "/",
              {
                "Ref": "SpaceFindApiDeploymentStageprod7AF91A2A"
              },
              "/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/hello/GET/ApiPermission.SpacefindSpaceFindApiB7390014.GET..hello"
      }
    },
    "SpaceFindApihelloGETApiPermissionTestSpacefindSpaceFindApiB7390014GEThello4D12E22D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "helloLambdaNodeJsFunction0898EE02",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "SpaceFindApi18BE2EA9"
              },
              "/test-invoke-stage/GET/hello"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/hello/GET/ApiPermission.Test.SpacefindSpaceFindApiB7390014.GET..hello"
      }
    },
    "SpaceFindApihelloGETDDF7CD15": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "SpaceFindApihello4200B2B5"
        },
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        },
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "SpaceUserAuthorizer401AE1AA"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "helloLambdaNodeJsFunction0898EE02",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/hello/GET/Resource"
      }
    },
    "SpaceFindApispaces0463F0AE": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "SpaceFindApi18BE2EA9",
            "RootResourceId"
          ]
        },
        "PathPart": "spaces",
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/spaces/Resource"
      }
    },
    "SpaceFindApispacesPOSTApiPermissionSpacefindSpaceFindApiB7390014POSTspaces813C930A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SpacesTableCreate125CEC52",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "SpaceFindApi18BE2EA9"
              },
              "/",
              {
                "Ref": "SpaceFindApiDeploymentStageprod7AF91A2A"
              },
              "/POST/spaces"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/spaces/POST/ApiPermission.SpacefindSpaceFindApiB7390014.POST..spaces"
      }
    },
    "SpaceFindApispacesPOSTApiPermissionTestSpacefindSpaceFindApiB7390014POSTspaces1D18AD3E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SpacesTableCreate125CEC52",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "SpaceFindApi18BE2EA9"
              },
              "/test-invoke-stage/POST/spaces"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/spaces/POST/ApiPermission.Test.SpacefindSpaceFindApiB7390014.POST..spaces"
      }
    },
    "SpaceFindApispacesPOSTFDEFF1C8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "SpaceFindApispaces0463F0AE"
        },
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SpacesTableCreate125CEC52",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceFindApi/Default/spaces/POST/Resource"
      }
    },
    "SpacesTable8A997355": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "spaceId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "spaceId",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "SpacesTable"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Space-find/SpacesTable/Resource"
      }
    },
    "SpacesTableCreateServiceRoleE49CA3B4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpacesTable-Create/ServiceRole/Resource"
      }
    },
    "SpacesTableCreateServiceRoleDefaultPolicy308B2E77": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SpacesTable8A997355",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SpacesTableCreateServiceRoleDefaultPolicy308B2E77",
        "Roles": [
          {
            "Ref": "SpacesTableCreateServiceRoleE49CA3B4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpacesTable-Create/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "SpacesTableCreate125CEC52": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "a82bb393d2e60dab68e48f4fe8d52091811464617c43048a48f78ccb840fbc60.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "SpacesTableCreateServiceRoleE49CA3B4",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "SpacesTable",
            "PRIMARY_KEY": "spaceId",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "FunctionName": "SpacesTable-Create",
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "SpacesTableCreateServiceRoleDefaultPolicy308B2E77",
        "SpacesTableCreateServiceRoleE49CA3B4"
      ],
      "Metadata": {
        "aws:cdk:path": "Space-find/SpacesTable-Create/Resource",
        "aws:asset:path": "asset.a82bb393d2e60dab68e48f4fe8d52091811464617c43048a48f78ccb840fbc60",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "SpaceUserPool6AB542DC": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1
            },
            {
              "Name": "verified_email",
              "Priority": 2
            }
          ]
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "AliasAttributes": [
          "email"
        ],
        "AutoVerifiedAttributes": [
          "email"
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "SpaceUserPool",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceUserPool/Resource"
      }
    },
    "SpaceUserPoolSpaceUserPoolclient4839E5E8": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "SpaceUserPool6AB542DC"
        },
        "AllowedOAuthFlows": [
          "implicit",
          "code"
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin"
        ],
        "CallbackURLs": [
          "https://example.com"
        ],
        "ClientName": "SpaceUserPool-client",
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH"
        ],
        "GenerateSecret": false,
        "SupportedIdentityProviders": [
          "COGNITO"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceUserPool/SpaceUserPool-client/Resource"
      }
    },
    "SpaceUserAuthorizer401AE1AA": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "SpaceUserAuthorizer",
        "RestApiId": {
          "Ref": "SpaceFindApi18BE2EA9"
        },
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "ProviderARNs": [
          {
            "Fn::GetAtt": [
              "SpaceUserPool6AB542DC",
              "Arn"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/SpaceUserAuthorizer/Resource"
      }
    },
    "admins": {
      "Type": "AWS::Cognito::UserPoolGroup",
      "Properties": {
        "UserPoolId": {
          "Ref": "SpaceUserPool6AB542DC"
        },
        "GroupName": "admins"
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/admins"
      }
    },
    "helloLambdaNodeJsFunctionServiceRole3CB63A33": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/helloLambdaNodeJsFunction/ServiceRole/Resource"
      }
    },
    "helloLambdaNodeJsFunctionServiceRoleDefaultPolicyED2010F2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListAllMyBuckets",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "helloLambdaNodeJsFunctionServiceRoleDefaultPolicyED2010F2",
        "Roles": [
          {
            "Ref": "helloLambdaNodeJsFunctionServiceRole3CB63A33"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/helloLambdaNodeJsFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "helloLambdaNodeJsFunction0898EE02": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "4a729c8b3eedf25e249fb39f5cb5702687d5df5f9e0032e4512abdf2a945ca59.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "helloLambdaNodeJsFunctionServiceRole3CB63A33",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "helloLambdaNodeJsFunctionServiceRoleDefaultPolicyED2010F2",
        "helloLambdaNodeJsFunctionServiceRole3CB63A33"
      ],
      "Metadata": {
        "aws:cdk:path": "Space-find/helloLambdaNodeJsFunction/Resource",
        "aws:asset:path": "asset.4a729c8b3eedf25e249fb39f5cb5702687d5df5f9e0032e4512abdf2a945ca59",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/3WRQW/CMAyFfwv3kA2Qdi9M22kbYtsZhdQrhjSu4mSoq/rflzQU2GEnf36qX+zXuZzN5f1EnXiqy+PU4E52717po4jStlMNVsrDSbWy2wD7okGx+rI3WGhNwXrxCI2htoaIUb3polsFScsQRyk4DUvF1+bsmfkF/J7KJI1ElUVPnwxuTWS4CFF2+ANuWODS9QJVHfckkw1TXZNB3aY2Uy+Mqnelkl2SwNXIjGTTB0/Bah+5F2VrVU1ljOJD7bLZAOPw1lIJB5avQxnnBC+2ihk8yyKV2Mtl0Efww606XyG78Y5ke+ERVgbPEf6vPDsKTd8n6S34JvhrjsPDKWi01Z9QI6/IlpgPTPvLA999zx7kbCHnkwMjTl38j1iD3OT6CyREZSMbAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "Space-find/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "SpaceFindApiEndpoint77DFD906": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "SpaceFindApi18BE2EA9"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "SpaceFindApiDeploymentStageprod7AF91A2A"
            },
            "/"
          ]
        ]
      }
    },
    "UserPoolId": {
      "Value": {
        "Ref": "SpaceUserPool6AB542DC"
      }
    },
    "UserPoolClientId": {
      "Value": {
        "Ref": "SpaceUserPoolSpaceUserPoolclient4839E5E8"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}